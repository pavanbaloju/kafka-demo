plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.5'
    id 'io.spring.dependency-management' version '1.1.3'

    id "com.google.protobuf" version "0.9.4"
    id 'au.com.dius.pact' version '4.6.3'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
    maven { url "https://packages.confluent.io/maven/" }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    // https://mvnrepository.com/artifact/org.springframework.kafka/spring-kafka
    implementation 'org.springframework.kafka:spring-kafka:3.0.10'
    // https://mvnrepository.com/artifact/com.google.protobuf/protobuf-java-util
    implementation 'com.google.protobuf:protobuf-java-util:3.25.1'
    // https://mvnrepository.com/artifact/io.confluent/kafka-protobuf-serializer
    implementation 'io.confluent:kafka-protobuf-serializer:5.5.1'
    implementation 'org.glassfish.jersey.core:jersey-client:2.34'
    implementation 'org.glassfish.jersey.core:jersey-common:2.34'

    testImplementation 'au.com.dius.pact.consumer:junit5:4.6.3'
    testImplementation 'au.com.dius.pact.provider:junit5spring:4.6.3'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
}

pact {
    publish {
        pactDirectory = "$buildDir/pacts"
        pactBrokerUrl = 'http://localhost:9292'
    }
}

tasks.named('bootBuildImage') {
    builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
    useJUnitPlatform()
}
